package ObjEditingNatives

/* Complete example:

package ObjTest
import ObjEditingNatives


@compiletime function createTestUnit()
	let u = createUnitType("h000", "hfoo")
	// set base damage
	u.setInt("ua1b", 42)

*/


public tuple unitType(string key)

// when this function is called at compiletime it generated a compile error with the given message 
@compiletimenative public function compileError(string msg)

// creates a new unit type
// for example to create a new unit with id "h000" which is based on a footman ("hfoo") 
// let u = createUnitType("h000", "hfoo")
@compiletimenative public function createUnitType(string newId, string deriveFrom) returns unitType
	return unitType("") // dummy implementation
	
// changes an integer value of a unit
// for example to change the base damage to 42 of a unit use
// u.setInt("ua1b", 42)
@compiletimenative public function unitType.setInt(string modification, int value)
	skip
	

// changes a string value of a unit
@compiletimenative public function unitType.setString(string modification, string value)
	skip
	
// changes a real of a unit
@compiletimenative public function unitType.setReal(string modification, real value)
	skip
	
// changes a unreal (real between 0.0 and 1.0) of a unit
@compiletimenative public function unitType.setUnreal(string modification, real value)
	skip


