package Maths	
	import NoWurst
	import Vectors
	import Angle

	public constant real PI			=  3.141592654
	public constant real PI2 		=  6.28318
	public constant real PIHALF		=  1.570796326
	public constant real DEGTORAD  	=  0.017453293
	public constant real RADTODEG  	= 57.295779513
	
	public function polarProjectionX( real x,  real dist, angle ang ) returns real
		return x + dist * Cos(ang.radians())
	
	public function polarProjectionY( real y,  real dist, angle ang ) returns real
		return y + dist * Sin(ang.radians())

	public function polarProjectionZ( real z,  real dist, angle ang ) returns real
		return z + dist * Sin(ang.radians())
		
	public function angleBetweenCoords ( real x1, real y1, real x2, real y2 ) returns angle
		return Atan2(y2 - y1, x2 - x1).asAngleRadians()

	public function distanceBetweenCoords ( real x1, real y1, real x2, real y2 ) returns real
		return SquareRoot((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1))
		
	public function getSlopeAngle( real z1, real z2, real dist ) returns real
		return Atan2(z2-z1, dist )
		
	public function polarProjection3d( vec3 pos, real distance, angle angleGround, angle angleAir ) returns vec3
		real x = pos.x + distance * angleGround.cos() * angleAir.sin()
		real y = pos.y + distance * angleGround.sin() * angleAir.sin()
		real z = pos.z + distance * angleAir.cos() 
		return vec3(x,y,z)
		

endpackage

