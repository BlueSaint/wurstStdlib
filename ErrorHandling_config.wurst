package ErrorHandling_config
import NoWurst
import PrintingHelper
import MagicFunctions
import Table
import GameTimer
import Real

constant MUTE_ERROR_DURATION = 60

Table traceHashs = new Table()
/** error handing function.
This function is used by libraries and for internal Wurst errors like 
accessing a null-pointer. Overwrite this function to customize error handling.

Outputs an error message and terminates the current thread.
There is a compiler flag to augment the error messages with stack traces.
Error messages can also be disabled.
*/
@config public function error(string msg)
	let hash = StringHash(msg)
	if traceHashs.hasInt(hash)
		// Error has been printed before
		if traceHashs.loadInt(hash) + MUTE_ERROR_DURATION < currentTime
			// Time to print the error again
			print("|cffFF3A29Error:|r " + msg + getStackTraceString())
			traceHashs.saveBoolean(hash, false)
		else if traceHashs.hasBoolean(hash)
			if not traceHashs.loadBoolean(hash)
				print("|cffFF3A29Excessive repeating errors are being omitted")
				traceHashs.saveBoolean(hash, true)	
		else
			print("|cffFF3A29Excessive repeating errors are being omitted")
			traceHashs.saveBoolean(hash, true)	
			//
	else
		traceHashs.saveInt(hash, currentTime.toInt())
		print("|cffFF3A29Error:|r " + msg + getStackTraceString())
	// crash the thread:
	I2S(1 div 0)

