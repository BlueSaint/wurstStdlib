package Projectile
    import Fx
	import Vectors
	import Maths
	import Entity
	import Terrain
	
	public class Projectile extends DynamicEntity
		vec3 targetPos
		vec3 lastPolar
		
		Fx fx
		
		private int movement_type = FREE_MOVEMENT
		
		unit target					= null
		real rotationAngleGround 	= 0.
		real groundAngleSpeed		= 0.
		real rotationAngleAir		= 0.
		real airAngleSpeed			= 0.
		
		boolean useForceSources     = false
		boolean bounceOff			= false
		
		construct( real x, real y, real z, real angle, string fxpath )
			super(x,y,z)
			fx = new Fx(x,y, angle, fxpath)
			fx.setZ(z)

		
			
		override function update() 
			vec3 tempPolar
			if movement_type == SPIN_MOVEMENT
				if target != null
					var x = target.getX()
					var y = target.getY()
					tempPolar = polarProjection3d( vec3(x, y, getTerrainZ(x,y)+position.z), 100., rotationAngleGround, rotationAngleAir )
					velocity = tempPolar - lastPolar 
				else 
					print( "last: " + lastPolar.toString() )
					tempPolar = polarProjection3d( position, 100., rotationAngleGround, rotationAngleAir )
					print( "temp: " + tempPolar.toString() )
					velocity = lastPolar - tempPolar 
					print( "velocity: " + velocity.toString() )
				lastPolar = tempPolar
				rotationAngleAir += airAngleSpeed
				rotationAngleGround += groundAngleSpeed
			else if movement_type == FREE_MOVEMENT
				velocity += vec3( 0.,0.,-0.8)
			else if movement_type == AIM_MOVEMENT
				skip
			
			position = position + velocity
			fx.setX(position.x)
			fx.setY(position.y)
			fx.setZ(position.z- (getTerrainZ(position.x, position.y) - 336.))
		
		function setFx( string fxpath )
			fx.setFx( fxpath )
		
	
	
	
	constant int NO_MOVEMENT 	= 0
	constant int SPIN_MOVEMENT 	= 1
	constant int FREE_MOVEMENT  = 2
	constant int AIM_MOVEMENT 	= 3
		
endpackage
